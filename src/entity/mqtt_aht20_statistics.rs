//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "mqtt_aht20_statistics")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub sn: String,
    #[sea_orm(column_type = "Binary(BlobSize::Blob(None))", nullable)]
    pub humi_data: Option<Vec<u8>>,
    #[sea_orm(column_type = "Double", nullable)]
    pub humi_max: Option<f64>,
    #[sea_orm(column_type = "Double", nullable)]
    pub humi_min: Option<f64>,
    #[sea_orm(column_type = "Binary(BlobSize::Blob(None))", nullable)]
    pub temp_data: Option<Vec<u8>>,
    #[sea_orm(column_type = "Double", nullable)]
    pub temp_max: Option<f64>,
    #[sea_orm(column_type = "Double", nullable)]
    pub temp_min: Option<f64>,
    pub start_time: DateTime,
    pub duration: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
